version: '3.3'
services:
  front:
    image: ${PROJ_NAME}-front:latest
    container_name: ${PROJ_NAME}-front
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front/app:/home/app
      - /home/app/node_modules
    ports:
      - 3001:3000
    tty: true

  frontend:
    image: ${PROJ_NAME}-frontend:latest
    container_name: ${PROJ_NAME}-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/app:/home/node/app
      - frontend-volume/:/home/node/app/node_modules
    ports:
      - ${FRONT_DEV_PORT}:3000
      - ${FRONT_PROD_PORT}:5000
    tty: true

  back:
    image: ${PROJ_NAME}-back:latest
    container_name: ${PROJ_NAME}-back
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back/app:/go/src/app
    ports:
      - ${BACK_PORT}:${BACK_PORT}
    depends_on:
      - postgre
    tty: true

  postgre:
    image: ${PROJ_NAME}-db:latest
    container_name: ${PROJ_NAME}-db
    build:
      context: ./postgre
      dockerfile: Dockerfile
    volumes:
      - ./postgre/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      # - ./postgre/db:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

volumes:
  frontend-volume:
    name: ${PROJ_NAME}-volume
    driver: local
